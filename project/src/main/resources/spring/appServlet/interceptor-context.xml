<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<beans:bean id="checkCookie" class="com.gls.ppldv.common.interceptor.CheckCookieInterceptor" />
	
	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:ref bean="checkCookie" />
		</interceptor>
		
		
		
		<!-- 토큰 발급 -->
		<interceptor>
			<!-- 비밀번호 찾기 페이지에서 passAuth로 요청보내면 아이디 비번 전송시 csrf_token 발급 -->
			<mapping path="/user/changePass"/>
			<!-- 회원 수정 페이지 들어갈 때, 새로운 토큰 발급 -->
			<mapping path="/user/editProfile"/>
			
			<!-- 프로필 등록 페이지 들어갈 때, 새로운 토큰 발급 -->
			<mapping path="/developer/profile" />
			<beans:bean class="com.gls.ppldv.common.interceptor.CreateTokenInterceptor" />
		</interceptor>
		
		
		<!-- 토큰 체크 -->
		<interceptor>
			<!-- /user/change post 경로 대비 -->
			<mapping path="/user/change" />
			
			<!-- 회원 수정, 삭제에 들어가는 요청경로들 -->
			<mapping path="/user/edit" />
			<mapping path="/user/removeUser" />
			
			<!-- 프로필 등록 시 토큰 체크 -->
			
			
			<beans:bean class="com.gls.ppldv.common.interceptor.CheckTokenInterceptor" />
		</interceptor>
		
		
		<!-- 로그인 된 회원만 접속 권한 -->
		<interceptor>
			<mapping path="/user/*" />
			<exclude-mapping path="/user/login" />
			<exclude-mapping path="/user/register" />
			<exclude-mapping path="/user/findPass" />
			<beans:bean class="com.gls.ppldv.common.interceptor.AuthMemberInterceptor" />
		</interceptor>
		
		<!-- 로그인된 회원 중 DEVELOPER일 때와 BUSINESS일 때 구분 -->
		<interceptor>
			<mapping path="/developer/*" />
			<exclude-mapping path="/developer/search" />
			<exclude-mapping path="/developer/searchFirst" />
			<exclude-mapping path="/developer/readOtherPage" />
			<beans:bean class="com.gls.ppldv.common.interceptor.AuthDeveloperInterceptor" />
		</interceptor>
		
		
		<!-- 모든 데이터의 캐시 저장시간을 0으로 지정 -->
		<!-- 그냥 이렇게 지정하면 resource가 너무 많아지니깐 -->
		<!-- 적어도 resource로 들어오는 데이터는 캐시 저장 (86400 하루저장)-->
		<interceptor>
			<mapping path="/**" />
			<beans:bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
				<beans:property name="cacheSeconds" value="0" />
				<beans:property name="cacheMappings">
					<beans:props>
						<beans:prop key="/resources/**">86400</beans:prop>
					</beans:props>
				</beans:property>
			</beans:bean>
		</interceptor>
	</interceptors>

</beans:beans>
